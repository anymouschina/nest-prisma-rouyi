generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model config {
  create_time  DateTime @default(now()) @db.DateTime(6)
  update_time  DateTime @default(now()) @db.DateTime(6)
  remark       String   @default("") @db.VarChar(255)
  config_id    Int      @id @default(autoincrement())
  config_name  String   @default("") @db.VarChar(100)
  config_key   String   @default("") @db.VarChar(100)
  config_value String   @default("") @db.VarChar(500)
  config_type  String   @default("N") @db.Char(1)
  version      Int
  create_by    String   @default("") @db.VarChar(30)
  update_by    String   @default("") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dept {
  create_time     DateTime          @default(now()) @db.DateTime(6)
  update_time     DateTime          @default(now()) @db.DateTime(6)
  remark          String            @default("") @db.VarChar(255)
  dept_id         Int               @id @default(autoincrement())
  dept_name       String            @default("") @db.VarChar(50)
  order_num       Int               @default(0)
  leader          String?           @db.VarChar(20)
  phone           String?           @db.VarChar(11)
  email           String?           @db.VarChar(50)
  status          String            @default("0") @db.Char(1)
  del_flag        String            @default("0") @db.Char(1)
  mpath           String?           @default("") @db.VarChar(255)
  parentDeptId    Int?
  version         Int
  create_by       String            @default("") @db.VarChar(30)
  update_by       String            @default("") @db.VarChar(30)
  dept            dept?             @relation("deptTodept", fields: [parentDeptId], references: [dept_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_427c332b4ebe1147caa3328adfa")
  other_dept      dept[]            @relation("deptTodept")
  role_depts_dept role_depts_dept[]
  user            user[]

  @@index([parentDeptId], map: "FK_427c332b4ebe1147caa3328adfa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dict_data {
  create_time    DateTime   @default(now()) @db.DateTime(6)
  update_time    DateTime   @default(now()) @db.DateTime(6)
  remark         String     @default("") @db.VarChar(255)
  dict_data      Int        @id @default(autoincrement())
  dict_sort      Int        @default(0)
  dict_label     String     @default("") @db.VarChar(100)
  dict_value     String     @default("") @db.VarChar(100)
  css_class      String?    @db.VarChar(100)
  list_class     String?    @db.VarChar(100)
  is_default     String     @default("N") @db.Char(1)
  status         String     @default("0") @db.Char(1)
  dictTypeDictId Int?
  version        Int
  create_by      String     @default("") @db.VarChar(30)
  update_by      String     @default("") @db.VarChar(30)
  dict_type      dict_type? @relation(fields: [dictTypeDictId], references: [dict_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bddc8251ad1c1ed3bcad5208a15")

  @@index([dictTypeDictId], map: "FK_bddc8251ad1c1ed3bcad5208a15")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dict_type {
  create_time DateTime    @default(now()) @db.DateTime(6)
  update_time DateTime    @default(now()) @db.DateTime(6)
  remark      String      @default("") @db.VarChar(255)
  dict_id     Int         @id @default(autoincrement())
  dict_name   String      @default("") @db.VarChar(100)
  dict_type   String      @unique(map: "IDX_003e8d417dc1f24cd03575cb9e") @default("") @db.VarChar(100)
  status      String      @default("0") @db.Char(1)
  version     Int
  create_by   String      @default("") @db.VarChar(30)
  update_by   String      @default("") @db.VarChar(30)
  dict_data   dict_data[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model job {
  create_time     DateTime @default(now()) @db.DateTime(6)
  update_time     DateTime @default(now()) @db.DateTime(6)
  remark          String   @default("") @db.VarChar(255)
  job_id          Int      @id @default(autoincrement())
  job_name        String   @default("") @db.VarChar(64)
  job_group       String   @default("DEFAULT") @db.VarChar(64)
  invoke_target   String?  @db.VarChar(225)
  cron_expression String   @default("") @db.VarChar(225)
  misfire_policy  String   @default("3") @db.VarChar(20)
  concurrent      String   @default("1") @db.Char(1)
  status          String   @default("0") @db.Char(1)
  version         Int
  create_by       String   @default("") @db.VarChar(30)
  update_by       String   @default("") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model job_log {
  job_log_id     Int      @id @default(autoincrement())
  job_name       String   @db.VarChar(64)
  job_group      String   @db.VarChar(64)
  invoke_target  String   @db.VarChar(500)
  job_message    String?  @db.VarChar(500)
  status         String   @default("0") @db.Char(1)
  exception_info String   @default("") @db.VarChar(2000)
  create_time    DateTime @default(now()) @db.DateTime(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model logininfor {
  info_id        Int      @id @default(autoincrement())
  user_name      String   @default("") @db.VarChar(50)
  ipaddr         String   @default("") @db.VarChar(128)
  login_location String   @default("") @db.VarChar(255)
  browser        String   @default("") @db.VarChar(50)
  os             String   @default("") @db.VarChar(50)
  status         String   @default("0") @db.Char(1)
  msg            String   @default("") @db.VarChar(255)
  login_time     DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model menu {
  create_time     DateTime          @default(now()) @db.DateTime(6)
  update_time     DateTime          @default(now()) @db.DateTime(6)
  remark          String            @default("") @db.VarChar(255)
  menu_id         Int               @id @default(autoincrement())
  menu_name       String            @db.VarChar(50)
  order_num       Int
  path            String            @default("") @db.VarChar(200)
  component       String?           @db.VarChar(255)
  query           String?           @db.VarChar(255)
  is_frame        Int               @default(1)
  menu_type       String            @default("") @db.Char(1)
  visible         String            @default("0") @db.Char(1)
  status          String            @default("0") @db.Char(1)
  perms           String?           @db.VarChar(100)
  icon            String            @default("#") @db.Char(100)
  mpath           String?           @default("") @db.VarChar(255)
  parentMenuId    Int?
  version         Int
  create_by       String            @default("") @db.VarChar(30)
  update_by       String            @default("") @db.VarChar(30)
  is_cache        String            @default("0") @db.Char(1)
  menu            menu?             @relation("menuTomenu", fields: [parentMenuId], references: [menu_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fbe2023241bd4c612415c080cc6")
  other_menu      menu[]            @relation("menuTomenu")
  role_menus_menu role_menus_menu[]

  @@index([parentMenuId], map: "FK_fbe2023241bd4c612415c080cc6")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notice {
  create_time    DateTime @default(now()) @db.DateTime(6)
  update_time    DateTime @default(now()) @db.DateTime(6)
  remark         String   @default("") @db.VarChar(255)
  notice_id      Int      @id @default(autoincrement())
  notice_title   String   @db.VarChar(50)
  notice_type    String   @db.Char(1)
  notice_content String?  @db.LongText
  status         String   @default("0") @db.Char(1)
  version        Int
  create_by      String   @default("") @db.VarChar(30)
  update_by      String   @default("") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model oper_log {
  oper_id        Int      @id @default(autoincrement())
  title          String   @default("") @db.VarChar(50)
  business_type  String   @default("0") @db.Char(1)
  method         String   @default("") @db.VarChar(100)
  request_method String   @default("") @db.VarChar(10)
  operator_type  String   @default("0") @db.Char(1)
  oper_name      String   @default("") @db.VarChar(50)
  dept_name      String   @default("") @db.VarChar(50)
  oper_url       String   @default("") @db.VarChar(255)
  oper_ip        String   @default("") @db.VarChar(128)
  oper_location  String   @default("") @db.VarChar(255)
  oper_param     String   @default("") @db.VarChar(2000)
  json_result    String   @default("") @db.VarChar(2000)
  status         Int      @default(0)
  errorMsg       String   @default("") @db.VarChar(2000)
  oper_time      DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model post {
  create_time     DateTime          @default(now()) @db.DateTime(6)
  update_time     DateTime          @default(now()) @db.DateTime(6)
  remark          String            @default("") @db.VarChar(255)
  post_id         Int               @id @default(autoincrement())
  post_code       String            @unique(map: "IDX_4365bf877a23182bde2156ec6e") @db.VarChar(64)
  post_name       String            @db.VarChar(50)
  post_sort       Int
  status          String            @db.Char(1)
  version         Int
  create_by       String            @default("") @db.VarChar(30)
  update_by       String            @default("") @db.VarChar(30)
  user_posts_post user_posts_post[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model role {
  create_time         DateTime          @default(now()) @db.DateTime(6)
  update_time         DateTime          @default(now()) @db.DateTime(6)
  remark              String            @default("") @db.VarChar(255)
  role_id             Int               @id @default(autoincrement())
  role_name           String            @db.VarChar(30)
  role_key            String            @db.VarChar(100)
  role_sort           Int
  data_scope          String            @default("1") @db.Char(1)
  menu_check_strictly Int               @default(1) @db.TinyInt
  dept_check_strictly Int               @default(1) @db.TinyInt
  status              String            @db.Char(1)
  del_flag            String            @default("0") @db.Char(1)
  version             Int
  create_by           String            @default("") @db.VarChar(30)
  update_by           String            @default("") @db.VarChar(30)
  role_depts_dept     role_depts_dept[]
  role_menus_menu     role_menus_menu[]
  user_roles_role     user_roles_role[]
}

model role_depts_dept {
  roleRoleId Int
  deptDeptId Int
  dept       dept @relation(fields: [deptDeptId], references: [dept_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a6df3f8f1af0e6fcd2424ff467c")
  role       role @relation(fields: [roleRoleId], references: [role_id], onDelete: Cascade, map: "FK_c38adaee013585bdc3f36a4edcf")

  @@id([roleRoleId, deptDeptId])
  @@index([deptDeptId], map: "IDX_a6df3f8f1af0e6fcd2424ff467")
  @@index([roleRoleId], map: "IDX_c38adaee013585bdc3f36a4edc")
}

model role_menus_menu {
  roleRoleId Int
  menuMenuId Int
  menu       menu @relation(fields: [menuMenuId], references: [menu_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5b29b58ccc52b56f0a1ad629209")
  role       role @relation(fields: [roleRoleId], references: [role_id], onDelete: Cascade, map: "FK_d770d9678ced1d5a050126672fa")

  @@id([roleRoleId, menuMenuId])
  @@index([menuMenuId], map: "IDX_5b29b58ccc52b56f0a1ad62920")
  @@index([roleRoleId], map: "IDX_d770d9678ced1d5a050126672f")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user {
  create_time     DateTime          @default(now()) @db.DateTime(6)
  update_time     DateTime          @default(now()) @db.DateTime(6)
  remark          String            @default("") @db.VarChar(255)
  user_id         Int               @id @default(autoincrement())
  user_name       String            @db.VarChar(30)
  nick_name       String            @db.VarChar(30)
  user_type       String            @default("00") @db.VarChar(2)
  email           String?           @db.VarChar(50)
  phonenumber     String?           @db.VarChar(11)
  sex             String            @default("0") @db.Char(1)
  avatar          String            @default("") @db.VarChar(100)
  password        String            @default("") @db.VarChar(100)
  salt            String            @default("") @db.VarChar(100)
  status          String            @default("0") @db.Char(1)
  del_flag        String            @default("0") @db.Char(1)
  login_ip        String            @default("") @db.VarChar(128)
  login_date      DateTime?         @db.DateTime(0)
  deptDeptId      Int?
  version         Int
  create_by       String            @default("") @db.VarChar(30)
  update_by       String            @default("") @db.VarChar(30)
  dept            dept?             @relation(fields: [deptDeptId], references: [dept_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d61db9f4f5464b51df4bd6f2332")
  user_posts_post user_posts_post[]
  user_roles_role user_roles_role[]

  @@index([deptDeptId], map: "FK_d61db9f4f5464b51df4bd6f2332")
}

model user_posts_post {
  userUserId Int
  postPostId Int
  user       user @relation(fields: [userUserId], references: [user_id], onDelete: Cascade, map: "FK_28fca0ded6fc3ab66b451623f05")
  post       post @relation(fields: [postPostId], references: [post_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3511ec6a3e38572359525a85502")

  @@id([userUserId, postPostId])
  @@index([userUserId], map: "IDX_28fca0ded6fc3ab66b451623f0")
  @@index([postPostId], map: "IDX_3511ec6a3e38572359525a8550")
}

model user_roles_role {
  userUserId Int
  roleRoleId Int
  user       user @relation(fields: [userUserId], references: [user_id], onDelete: Cascade, map: "FK_0bd606ba8531dd93b457b8486d9")
  role       role @relation(fields: [roleRoleId], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_56f8ede2f2e059d4db74591c533")

  @@id([userUserId, roleRoleId])
  @@index([userUserId], map: "IDX_0bd606ba8531dd93b457b8486d")
  @@index([roleRoleId], map: "IDX_56f8ede2f2e059d4db74591c53")
}
